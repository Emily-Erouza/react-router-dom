{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/Workspace/react-router-dom/signup/client/client/src/components/Signin.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signin() {\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n\n  const existingUsers = [{\n    name: \"Emily\",\n    email: \"emilysbongile17@gmail.com\"\n  }, {\n    name: \"Given\",\n    email: \"Given@gmail.com\"\n  }];\n  const checkUserExistence = (name, email) => {\n    const userExists = existingUsers.some(user => user.name === name && user.email === email);\n    if (userExists) {\n      alert(\"User exists!\");\n    } else {\n      alert(\"User doesn't exist\");\n    }\n  };\n  const inputName = prompt(\"Enter your name:\");\n  const inputEmail = prompt(\"Enter your email:\");\n  checkUserExistence(inputName, inputEmail);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // console.log(\"Name:\", name, \"Email:\", email);\n    const existingUsers = [{\n      name: \"Emily\",\n      email: \"emilysbongile17@gmail.com\"\n    }, {\n      name: \"Given\",\n      email: \"Given@gmail.com\"\n    }];\n    const checkUserExistence = (name, email) => {\n      const userExists = existingUsers.some(user => user.name === name && user.email === email);\n      if (userExists) {\n        alert(\"User exists!\");\n      } else {\n        alert(\"User doesn't exist\");\n      }\n    };\n    const inputName = prompt(\"Enter your name:\");\n    const inputEmail = prompt(\"Enter your email:\");\n    checkUserExistence(inputName, inputEmail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forms\",\n      id: \"signin-form\",\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"form-control\"\n        // value={name}\n        ,\n        placeholder: \"Enter your name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control\"\n        // value={email}\n        // onChange={(e) => setEmail(e.target.value)}\n        ,\n        placeholder: \"Enter your Email\",\n        rules: [{\n          type: \"email\",\n          message: \"The input is Empty!\"\n        }, {\n          required: true,\n          message: \"if user doesn't exit!\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        onClick: handleSubmit,\n        children: \"Signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"form-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dashbaord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signin","existingUsers","name","email","checkUserExistence","userExists","some","user","alert","inputName","prompt","inputEmail","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","action","method","htmlFor","type","placeholder","onChange","setName","target","value","rules","message","required","onClick","for","_c","$RefreshReg$"],"sources":["/home/tcg-pc1/Workspace/react-router-dom/signup/client/client/src/components/Signin.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction Signin() {\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n\n  \n \n\nconst existingUsers = [\n  { name: \"Emily\", email: \"emilysbongile17@gmail.com\" },\n  { name: \"Given\", email: \"Given@gmail.com\" },\n \n];\n\nconst checkUserExistence = (name, email) => {\n  const userExists = existingUsers.some(user => user.name === name && user.email === email);\n\n  if (userExists) {\n      alert(\"User exists!\");\n  } else {\n      alert(\"User doesn't exist\");\n  }\n};\n\n\nconst inputName = prompt(\"Enter your name:\");\nconst inputEmail = prompt(\"Enter your email:\");\n\ncheckUserExistence(inputName, inputEmail);\n\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n\n    // console.log(\"Name:\", name, \"Email:\", email);\n    const existingUsers = [\n      { name: \"Emily\", email: \"emilysbongile17@gmail.com\" },\n      { name: \"Given\", email: \"Given@gmail.com\" },\n     \n    ];\n    \n    const checkUserExistence = (name, email) => {\n      const userExists = existingUsers.some(user => user.name === name && user.email === email);\n    \n      if (userExists) {\n          alert(\"User exists!\");\n      } else {\n          alert(\"User doesn't exist\");\n      }\n    };\n    \n    \n    const inputName = prompt(\"Enter your name:\");\n    const inputEmail = prompt(\"Enter your email:\");\n    \n    checkUserExistence(inputName, inputEmail);\n   \n};\n\n  return (\n    <div className=\"signin\">\n     \n    \n        \n       \n      <h1>Signin</h1>\n\n      <form onSubmit={handleSubmit} className=\"forms\" id=\"signin-form\" action=\"\" method=\"post\">\n\n     \n\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          // value={name}\n          placeholder=\"Enter your name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          className=\"form-control\"\n          // value={email}\n          // onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Enter your Email\"\n\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is Empty!\",\n            },\n            {\n              required: true,\n              message: \"if user doesn't exit!\",\n            },\n          ]}\n        />\n\n        <button type=\"submit\" className=\"btn\"  onClick={handleSubmit}  >\n          Signin\n        \n        </button>\n        <label for=\"form-switch\"><span>Dashbaord</span></label>\n      </form>\n    </div>\n  );\n}\n\nexport default Signin;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,MAAMA,CAAA,EAAG;EAChB;EACA;;EAKF,MAAMC,aAAa,GAAG,CACpB;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAA4B,CAAC,EACrD;IAAED,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAkB,CAAC,CAE5C;EAED,MAAMC,kBAAkB,GAAGA,CAACF,IAAI,EAAEC,KAAK,KAAK;IAC1C,MAAME,UAAU,GAAGJ,aAAa,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,KAAKA,IAAI,IAAIK,IAAI,CAACJ,KAAK,KAAKA,KAAK,CAAC;IAEzF,IAAIE,UAAU,EAAE;MACZG,KAAK,CAAC,cAAc,CAAC;IACzB,CAAC,MAAM;MACHA,KAAK,CAAC,oBAAoB,CAAC;IAC/B;EACF,CAAC;EAGD,MAAMC,SAAS,GAAGC,MAAM,CAAC,kBAAkB,CAAC;EAC5C,MAAMC,UAAU,GAAGD,MAAM,CAAC,mBAAmB,CAAC;EAE9CN,kBAAkB,CAACK,SAAS,EAAEE,UAAU,CAAC;EAGzC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMb,aAAa,GAAG,CACpB;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAA4B,CAAC,EACrD;MAAED,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAkB,CAAC,CAE5C;IAED,MAAMC,kBAAkB,GAAGA,CAACF,IAAI,EAAEC,KAAK,KAAK;MAC1C,MAAME,UAAU,GAAGJ,aAAa,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,KAAKA,IAAI,IAAIK,IAAI,CAACJ,KAAK,KAAKA,KAAK,CAAC;MAEzF,IAAIE,UAAU,EAAE;QACZG,KAAK,CAAC,cAAc,CAAC;MACzB,CAAC,MAAM;QACHA,KAAK,CAAC,oBAAoB,CAAC;MAC/B;IACF,CAAC;IAGD,MAAMC,SAAS,GAAGC,MAAM,CAAC,kBAAkB,CAAC;IAC5C,MAAMC,UAAU,GAAGD,MAAM,CAAC,mBAAmB,CAAC;IAE9CN,kBAAkB,CAACK,SAAS,EAAEE,UAAU,CAAC;EAE7C,CAAC;EAEC,oBACEZ,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBAKrBjB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEfrB,OAAA;MAAMsB,QAAQ,EAAET,YAAa;MAACG,SAAS,EAAC,OAAO;MAACO,EAAE,EAAC,aAAa;MAACC,MAAM,EAAC,EAAE;MAACC,MAAM,EAAC,MAAM;MAAAR,QAAA,gBAItFjB,OAAA;QAAO0B,OAAO,EAAC,MAAM;QAAAT,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClCrB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXxB,IAAI,EAAC,MAAM;QACXa,SAAS,EAAC;QACV;QAAA;QACAY,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ,EAAGf,CAAC,IAAKgB,OAAO,CAAChB,CAAC,CAACiB,MAAM,CAACC,KAAK;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eAEFrB,OAAA;QAAO0B,OAAO,EAAC,OAAO;QAAAT,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCrB,OAAA;QACE2B,IAAI,EAAC,OAAO;QACZxB,IAAI,EAAC,OAAO;QACZa,SAAS,EAAC;QACV;QACA;QAAA;QACAY,WAAW,EAAC,kBAAkB;QAE9BK,KAAK,EAAE,CACL;UACEN,IAAI,EAAE,OAAO;UACbO,OAAO,EAAE;QACX,CAAC,EACD;UACEC,QAAQ,EAAE,IAAI;UACdD,OAAO,EAAE;QACX,CAAC;MACD;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEFrB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAACX,SAAS,EAAC,KAAK;QAAEoB,OAAO,EAAEvB,YAAa;QAAAI,QAAA,EAAG;MAGhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrB,OAAA;QAAOqC,GAAG,EAAC,aAAa;QAAApB,QAAA,eAACjB,OAAA;UAAAiB,QAAA,EAAM;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACiB,EAAA,GA7GQrC,MAAM;AA+Gf,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}