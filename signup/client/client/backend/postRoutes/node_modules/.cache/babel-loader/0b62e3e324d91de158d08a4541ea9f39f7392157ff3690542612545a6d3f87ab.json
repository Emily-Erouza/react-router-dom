{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/Workspace/react-router-dom/signup/client/client/src/components/Signin.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState } from \"react\";\n\nfunction Signin() {\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n\n  // Assuming 'name' and 'email' are declared somewhere in your code\n  let name;\n  let email;\n  const validateNameAndEmail = (name, email) => {\n    if (name === \"\" && email === \"\") {\n      alert(\"Fill in your details\");\n    } else if (name === \"\") {\n      alert(\"Please enter a name\");\n    } else if (email === \"\") {\n      alert(\"Please enter an email\");\n    } else {\n      alert(\"There user doesn't exist\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Assuming 'name' and 'email' are declared somewhere in your code\n    name = document.getElementById(\"name\").value;\n    email = document.getElementById(\"email\").value;\n    console.log(\"Name:\", name, \"Email:\", email);\n    validateNameAndEmail(name, email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forms\",\n      id: \"signin-form\",\n      action: \"\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        className: \"form-control\",\n        value: name,\n        placeholder: \"Enter your name\"\n        // onChange={(e) => setName(e.target.value)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        value: email\n        // onChange={(e) => setEmail(e.target.value)}\n        ,\n        placeholder: \"Enter your Email\",\n        rules: [{\n          type: \"email\",\n          message: \"The input is Empty!\"\n        }, {\n          required: true,\n          message: \"if user doesn't exit!\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        onClick: handleSubmit,\n        children: \"Signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"form-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dashbaord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["Signin","name","email","validateNameAndEmail","alert","handleSubmit","e","preventDefault","document","getElementById","value","console","log","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","action","method","htmlFor","type","placeholder","rules","message","required","onClick","for","_c","$RefreshReg$"],"sources":["/home/tcg-pc1/Workspace/react-router-dom/signup/client/client/src/components/Signin.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n\nfunction Signin() {\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n\n  \n // Assuming 'name' and 'email' are declared somewhere in your code\nlet name;\nlet email;\n\nconst validateNameAndEmail = (name, email) => {\n    if (name === \"\" && email === \"\") {\n        alert(\"Fill in your details\");\n    } else if (name === \"\") {\n        alert(\"Please enter a name\");\n    } else if (email === \"\") {\n        alert(\"Please enter an email\");\n    } else {\n        alert(\"There user doesn't exist\");\n    }\n};\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Assuming 'name' and 'email' are declared somewhere in your code\n    name = document.getElementById(\"name\").value;\n    email = document.getElementById(\"email\").value;\n\n    console.log(\"Name:\", name, \"Email:\", email);\n    \n    validateNameAndEmail(name, email);\n};\n\n  return (\n    <div className=\"signin\">\n     \n    \n        \n       \n      <h1>Signin</h1>\n\n      <form onSubmit={handleSubmit} className=\"forms\" id=\"signin-form\" action=\"\" method=\"post\">\n\n     \n\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          value={name}\n          placeholder=\"Enter your name\"\n          // onChange={(e) => setName(e.target.value)}\n        />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          className=\"form-control\"\n          value={email}\n          // onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Enter your Email\"\n\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is Empty!\",\n            },\n            {\n              required: true,\n              message: \"if user doesn't exit!\",\n            },\n          ]}\n        />\n\n        <button type=\"submit\" className=\"btn\"  onClick={handleSubmit}  >\n          Signin\n        \n        </button>\n        <label for=\"form-switch\"><span>Dashbaord</span></label>\n      </form>\n    </div>\n  );\n}\n\nexport default Signin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}